{
  "hash": "94449abe62be8718f9519f337486c6b6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nsubtitle: \"Creating data visualisation beyond default\"\nauthor: \"Thet Myat Noe\"\ndate: \"April 16, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# Overview\n\n## Setting the scene\n\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S\\$14,000. For families with monthly household income more than S\\$14,000, they need to turn to the private residential market.\n\n## Task\n\nAnalyse realis property data to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024.\n\n# Getting Started\n\n## Installing and loading the required libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,dplyr,lubridate,patchwork,ggthemes,hrbrthemes)\n```\n:::\n\n\n## Importing Data\n\nBelow code imports 5 .csv data from realis into R environment by utilizing [*`read_csv()`*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package. **readr** is part of tidyverse packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis5 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n```\n:::\n\n\n## Data Pre-processing\n\n### Combining all quarter data into one file\n\nAll residential property market data from realis by different quarters are merged into one file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge <- rbind(realis1, realis2, realis3, realis4, realis5)\n```\n:::\n\n\n### Checking for duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge[duplicated(realis_merge),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 21\n# ℹ 21 variables: Project Name <chr>, Transacted Price ($) <dbl>,\n#   Area (SQFT) <dbl>, Unit Price ($ PSF) <dbl>, Sale Date <chr>,\n#   Address <chr>, Type of Sale <chr>, Type of Area <chr>, Area (SQM) <dbl>,\n#   Unit Price ($ PSM) <dbl>, Nett Price($) <chr>, Property Type <chr>,\n#   Number of Units <dbl>, Tenure <chr>, Completion Date <chr>,\n#   Purchaser Address Indicator <chr>, Postal Code <chr>,\n#   Postal District <chr>, Postal Sector <chr>, Planning Region <chr>, …\n```\n\n\n:::\n:::\n\n\nNo duplicated rows are present in the data based on duplicate check above.\n\n### Rename columns for further data visualization\nBelow glimpse of data set shows the current column name. We can see there are spaces in column name.\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 21\n$ `Project Name`                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        <dbl> 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   <chr> \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          <dbl> 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               <chr> \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             <chr> \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n```\n\n\n:::\n:::\n\n\nSpace in column names will create error when used as it is in R code. Hence, replacing them with underscore is necessary.\nUse gsub() to replace space with underscores and use rename_with() function from 'dplyr' to rename all the columns with new column names.\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge <- realis_merge %>%\n  rename_with(~ gsub(\" \", \"_\", .), everything())\n```\n:::\n\n\nNow, we can see that column names are renamed accordingly with underscore in place of space.\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 21\n$ Project_Name                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASURE…\n$ `Transacted_Price_($)`      <dbl> 2317000, 1823500, 1421112, 1258112, 128000…\n$ `Area_(SQFT)`               <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88, …\n$ `Unit_Price_($_PSF)`        <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095, …\n$ Sale_Date                   <chr> \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 2023…\n$ Address                     <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JALA…\n$ Type_of_Sale                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New S…\n$ Type_of_Area                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", \"S…\n$ `Area_(SQM)`                <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 420.…\n$ `Unit_Price_($_PSM)`        <dbl> 28256, 22238, 14211, 13105, 15802, 19015, …\n$ `Nett_Price($)`             <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-…\n$ Property_Type               <chr> \"Condominium\", \"Condominium\", \"Executive C…\n$ Number_of_Units             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Tenure                      <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"99 …\n$ Completion_Date             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncompleted…\n$ Purchaser_Address_Indicator <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"Pr…\n$ Postal_Code                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", \"7…\n$ Postal_District             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\", …\n$ Postal_Sector               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\", …\n$ Planning_Region             <chr> \"Central Region\", \"East Region\", \"North Re…\n$ Planning_Area               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishun\"…\n```\n\n\n:::\n:::\n\n\n### Create Quarter Column\nUse as.Date() function to put Sale_Date column into date object, specify format to ensure as.Date() recognize the content accurately as date.\nUse year() and quarter() functions from 'lubridate' package to extract year and use paste() to concatenate the strings.\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge$Sale_Date <- as.Date(realis_merge$Sale_Date, format = \"%d %b %Y\")\nrealis_merge$Quarter <- paste(year(realis_merge$Sale_Date), \"Q\", quarter(realis_merge$Sale_Date), sep=\"\")\n```\n:::\n\n\n## Data Glimpse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 22\n$ Project_Name                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASURE…\n$ `Transacted_Price_($)`      <dbl> 2317000, 1823500, 1421112, 1258112, 128000…\n$ `Area_(SQFT)`               <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88, …\n$ `Unit_Price_($_PSF)`        <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095, …\n$ Sale_Date                   <date> 2023-01-01, 2023-01-02, 2023-01-02, 2023-…\n$ Address                     <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JALA…\n$ Type_of_Sale                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New S…\n$ Type_of_Area                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", \"S…\n$ `Area_(SQM)`                <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 420.…\n$ `Unit_Price_($_PSM)`        <dbl> 28256, 22238, 14211, 13105, 15802, 19015, …\n$ `Nett_Price($)`             <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-…\n$ Property_Type               <chr> \"Condominium\", \"Condominium\", \"Executive C…\n$ Number_of_Units             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Tenure                      <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"99 …\n$ Completion_Date             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncompleted…\n$ Purchaser_Address_Indicator <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"Pr…\n$ Postal_Code                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", \"7…\n$ Postal_District             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\", …\n$ Postal_Sector               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\", …\n$ Planning_Region             <chr> \"Central Region\", \"East Region\", \"North Re…\n$ Planning_Area               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishun\"…\n$ Quarter                     <chr> \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2…\n```\n\n\n:::\n:::\n\n\n:::\n\n# Data Visualization [1]\nUse ggplot2 to chart transaction count by Planning Region and Property Type breakdown by quarter.\nUse ggplot2 extension called [**patchwork**](https://patchwork.data-imaginist.com/) to combine separate ggplot2 graphs into a single figure.\nuse ggtheme to set Wall street journal theme.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get number of transactions for each combination of Property_Type and Quarter\ntrans_per_prop_quarter <- realis_merge %>%\n  group_by(Property_Type, Quarter) %>%\n  summarise(Number_of_Transactions = n(), .groups = 'drop')\n\n# Plot the bar chart with a breakdown by quarter\np1 <- ggplot(trans_per_prop_quarter, aes(x = Property_Type, y = Number_of_Transactions, fill = Quarter)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(x = \"Property Type\", y = \"No. of Transactions\", title = \"No. of Transactions by Property Type and Quarter\")+\n  ylim(0,3200) +\n  theme_wsj()+\n  theme(plot.title = element_text(size = rel(0.4)),  \n        axis.text.x = element_text(size = rel(0.7)),  \n        axis.text.y = element_text(size = rel(0.7)),\n        legend.text = element_text(size = rel(0.7)),\n        legend.title = element_text(size = rel(0.4)))  +\n  scale_x_discrete(guide = guide_axis(n.dodge = 2)) \n\n# Get overall transaction count per quarter\ntransactions_by_quarter <- realis_merge %>%\n  count(Quarter) \n\n# Plot overall transaction trend\np2 <- ggplot(transactions_by_quarter, aes(x = Quarter, y = n)) +\n  geom_bar(stat = \"identity\", fill = \"burlywood\") +  \n  labs(\n    title = \"Overall Transactions by Quarter\",\n    x = \"Quarter\",\n    y = \"No. of Transactions\"\n  ) +\n  ylim(0,8000) +\n  geom_text(aes(label = n),  \n            vjust = -0.3,\n            size = rel(3),\n            color = \"black\") +\n  theme_wsj()+\n  theme(plot.title = element_text(size = rel(0.4)),  \n        axis.text.x = element_text(size = rel(0.7)), \n        axis.text.y = element_text(size = rel(0.7)))  \n\n# Combine the plots into one\np <- (p2/p1) \np \n```\n:::\n\n:::\n\n\n::: callout-tip\n## Insights from data visualization [1]\n\n\n:::\n\n# Data Visualization [2]\n\n::: panel-tabset\n## Condominiums\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n## Apartments\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Code for Condominium\n# Filter for 'Condominium' in the 'Property_Type' column\ncondo_data <- realis_merge %>%\n  filter(Property_Type == \"Condominium\") \n\n# Create boxplot\nggplot(condo_data, aes(x = Quarter, y = `Unit_Price_($_PSM)`)) + \n  geom_boxplot(fill = \"burlywood\") +\n  labs(\n    title = \"Boxplot of Unit Price ($ PSM) by Quarter for Condominiums\",\n    x = \"Quarter\",\n    y = \"Unit Price ($ PSM)\"\n  ) +\n  theme_wsj() +\n  theme(plot.title = element_text(size = rel(0.4)),  \n        axis.text.x = element_text(size = rel(0.7)), \n        axis.text.y = element_text(size = rel(0.7))) \n```\n\n```{.r .cell-code}\n### Code for Apartment\n# Filter for 'Apartment' in the 'Property_Type' column\naprt_data <- realis_merge %>%\n  filter(Property_Type == \"Apartment\") \n\n# Create boxplot\nggplot(aprt_data, aes(x = Quarter, y = `Unit_Price_($_PSM)`)) + \n  geom_boxplot(fill = \"burlywood\") +\n  labs(\n    title = \"Boxplot of Unit Price ($ PSM) by Quarter for Apartments\",\n    x = \"Quarter\",\n    y = \"Unit Price ($ PSM)\"\n  ) +\n  theme_wsj() +\n  theme(plot.title = element_text(size = rel(0.4)),  \n        axis.text.x = element_text(size = rel(0.7)), \n        axis.text.y = element_text(size = rel(0.7))) \n```\n:::\n\n:::\n\n::: callout-tip\n## Insights from data visualization [2]\n\n\n:::\n\n# Data Visualization [3]\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}