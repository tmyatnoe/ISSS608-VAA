{
  "hash": "61255f14674fe42bd11d2bef1d7942b3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2\"\nsubtitle: \"DataVis Makeover\"\nauthor: \"Thet Myat Noe\"\ndate: \"May 2, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n![](pasir-ris-8.webp) Photo: https://www.propertyguru.com.sg/\n\n# 1. Overview\n\n## 1.1 Setting the scene\n\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S\\$14,000. For families with monthly household income more than S\\$14,000, they need to turn to the private residential market.\n\n## 1.2 Task\n\nThis exercise aims to critic Data Visualization of Singapore Private Property market in terms of clarity and aesthetics. Prepare a sketch for the alternative design by using the data visualisation design principles and best practices. Finally, remake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.\n\n# 2. Getting Started\n\n## 2.1 Installing and loading the required libraries\n\n| Package                                                                     | Description                                                                                                                                                                                            |\n|--------------------------|----------------------------------------------|\n| [tidyverse](https://www.tidyverse.org/)                                     | Used data import, tidying, manipulation, and data visualization. Packages like readr, dplyr, lubridate are part of tidyverse.                                                                          |\n| [patchwork](https://patchwork.data-imaginist.com/)                          | Used to combine individual ggplot into one graphic.                                                                                                                                                    |\n| [ggthemes](https://cran.r-project.org/web/packages/ggthemes/index.html)     | Provides 'ggplot2' themes and scales that replicate the look of plots by Edward Tufte, Stephen Few, 'Fivethirtyeight', 'The Economist', 'Stata', 'Excel', and 'The Wall Street Journal', among others. |\n| [hrbrthemes](https://cran.r-project.org/web/packages/hrbrthemes/index.html) | A compilation of extra 'ggplot2' themes, scales and utilities, including a spell check function for plot label fields and an overall emphasis on typography.                                           |\n| [rcolorbrewer](https://r-graph-gallery.com/38-rcolorbrewers-palettes.html)  | The RColorBrewer package offers several color palette for R.                                                                                                                                           |\n\nThe code chunk below uses `p_load()` function from **pacman** package to check if packages listed are already installed in the computer. The packages are loaded if they are found to be installed. If they are not installed, the function will proceed to install and load them into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,patchwork,ggthemes,hrbrthemes)\n```\n:::\n\n\n## 2.2 Importing Data\n\nBelow code imports 5 .csv data from REALIS into R environment by utilizing `read_csv()` function of **readr** package. readr is part of **tidyverse** packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\") #2023 Q1\nrealis2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\") #2023 Q2\nrealis3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\") #2023 Q3\nrealis4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\") #2023 Q4\nrealis5 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\") #2024 Q1\n```\n:::\n\n\n## 2.3 Data Pre-processing\n\n### 2.3.1 Combining all quarter data into one file\n\nAll residential property market data from REALIS by different quarters are merged into one file using `rbind()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge <- rbind(realis1, realis2, realis3, realis4, realis5)\n```\n:::\n\n\n### 2.3.2 Checking for duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge[duplicated(realis_merge),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 21\n# ℹ 21 variables: Project Name <chr>, Transacted Price ($) <dbl>,\n#   Area (SQFT) <dbl>, Unit Price ($ PSF) <dbl>, Sale Date <chr>,\n#   Address <chr>, Type of Sale <chr>, Type of Area <chr>, Area (SQM) <dbl>,\n#   Unit Price ($ PSM) <dbl>, Nett Price($) <chr>, Property Type <chr>,\n#   Number of Units <dbl>, Tenure <chr>, Completion Date <chr>,\n#   Purchaser Address Indicator <chr>, Postal Code <chr>,\n#   Postal District <chr>, Postal Sector <chr>, Planning Region <chr>, …\n```\n\n\n:::\n:::\n\n\nNo duplicated rows are present in the data based on duplicate check above using `duplicated()` function.\n\n#### 2.3.3 Rename columns for further data visualization\n\nBelow glimpse of data set shows the current column name. We can see there are spaces in column name.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 21\n$ `Project Name`                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        <dbl> 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   <chr> \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          <dbl> 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               <chr> \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             <chr> \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n```\n\n\n:::\n:::\n\n\nSpace in column names will create error when used as it is in R code. Hence, replacing them with underscore is necessary. Use `gsub()` to replace space with underscores and use `rename_with()` function from **dplyr** ![](dplyr.png){width=\"53\"} to rename all the columns with new column names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge <- realis_merge %>%\n  rename_with(~ gsub(\" \", \"_\", .), everything())\n```\n:::\n\n\nNow, we can see that column names are renamed accordingly with underscore in place of space.\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n:::\n\n\n## Data Glimpse\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 21\n$ Project_Name                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASURE…\n$ `Transacted_Price_($)`      <dbl> 2317000, 1823500, 1421112, 1258112, 128000…\n$ `Area_(SQFT)`               <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88, …\n$ `Unit_Price_($_PSF)`        <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095, …\n$ Sale_Date                   <chr> \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 2023…\n$ Address                     <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JALA…\n$ Type_of_Sale                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New S…\n$ Type_of_Area                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", \"S…\n$ `Area_(SQM)`                <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 420.…\n$ `Unit_Price_($_PSM)`        <dbl> 28256, 22238, 14211, 13105, 15802, 19015, …\n$ `Nett_Price($)`             <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-…\n$ Property_Type               <chr> \"Condominium\", \"Condominium\", \"Executive C…\n$ Number_of_Units             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Tenure                      <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"99 …\n$ Completion_Date             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncompleted…\n$ Purchaser_Address_Indicator <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"Pr…\n$ Postal_Code                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", \"7…\n$ Postal_District             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\", …\n$ Postal_Sector               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\", …\n$ Planning_Region             <chr> \"Central Region\", \"East Region\", \"North Re…\n$ Planning_Area               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishun\"…\n```\n\n\n:::\n:::\n\n:::\n\n### 2.3.4 Create Quarter and Month Column\n\nUse `as.Date()` function to put Sale_Date column into date object, specify format to ensure `as.Date()` recognize the content accurately as date. Use `year()`, `quarter()` and `month()` functions from **lubridate** package to extract year, quarter & month and use `paste()` to concatenate the strings.\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge$Sale_Date <- as.Date(realis_merge$Sale_Date, format = \"%d %b %Y\")\nrealis_merge$Quarter <- paste(year(realis_merge$Sale_Date), \"Q\", quarter(realis_merge$Sale_Date), sep=\"\")\nrealis_merge$Month <- month(realis_merge$Sale_Date, label = TRUE)\n```\n:::\n\n\n## Data Glimpse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 23\n$ Project_Name                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASURE…\n$ `Transacted_Price_($)`      <dbl> 2317000, 1823500, 1421112, 1258112, 128000…\n$ `Area_(SQFT)`               <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88, …\n$ `Unit_Price_($_PSF)`        <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095, …\n$ Sale_Date                   <date> 2023-01-01, 2023-01-02, 2023-01-02, 2023-…\n$ Address                     <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JALA…\n$ Type_of_Sale                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New S…\n$ Type_of_Area                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", \"S…\n$ `Area_(SQM)`                <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 420.…\n$ `Unit_Price_($_PSM)`        <dbl> 28256, 22238, 14211, 13105, 15802, 19015, …\n$ `Nett_Price($)`             <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-…\n$ Property_Type               <chr> \"Condominium\", \"Condominium\", \"Executive C…\n$ Number_of_Units             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Tenure                      <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"99 …\n$ Completion_Date             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncompleted…\n$ Purchaser_Address_Indicator <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"Pr…\n$ Postal_Code                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", \"7…\n$ Postal_District             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\", …\n$ Postal_Sector               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\", …\n$ Planning_Region             <chr> \"Central Region\", \"East Region\", \"North Re…\n$ Planning_Area               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishun\"…\n$ Quarter                     <chr> \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2…\n$ Month                       <ord> Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Ja…\n```\n\n\n:::\n:::\n\n:::\n\n### 2.3.4 Create Area Category Column\n\nUse `mutate()`, `ifelse()` and `is.na()` to replace NA (missing values) with 0. Next, use `mutate()` and `cut()` functions to create area Catergory column (\"\\<100\", \"100-200\", \"200-300\", \"300-400\", \"\\>400\").\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge <- realis_merge %>%\n  mutate(\n    `Area_(SQM)` = ifelse(is.na(`Area_(SQM)`), 0, `Area_(SQM)`)  # Dealing with NA values\n  )\nrealis_merge <- realis_merge %>%\n  mutate(\n    Area_Category_SQM = cut(\n      `Area_(SQM)`,\n      breaks = c(0, 100, 200, 300, 400, Inf),  \n      labels = c(\"<100\", \"100-200\", \"200-300\", \"300-400\", \">400\"),\n      include.lowest = TRUE  \n    )\n  )\n```\n:::\n\n\n## Data Glimpse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 24\n$ Project_Name                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASURE…\n$ `Transacted_Price_($)`      <dbl> 2317000, 1823500, 1421112, 1258112, 128000…\n$ `Area_(SQFT)`               <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88, …\n$ `Unit_Price_($_PSF)`        <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095, …\n$ Sale_Date                   <date> 2023-01-01, 2023-01-02, 2023-01-02, 2023-…\n$ Address                     <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JALA…\n$ Type_of_Sale                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New S…\n$ Type_of_Area                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", \"S…\n$ `Area_(SQM)`                <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 420.…\n$ `Unit_Price_($_PSM)`        <dbl> 28256, 22238, 14211, 13105, 15802, 19015, …\n$ `Nett_Price($)`             <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-…\n$ Property_Type               <chr> \"Condominium\", \"Condominium\", \"Executive C…\n$ Number_of_Units             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Tenure                      <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"99 …\n$ Completion_Date             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncompleted…\n$ Purchaser_Address_Indicator <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"Pr…\n$ Postal_Code                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", \"7…\n$ Postal_District             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\", …\n$ Postal_Sector               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\", …\n$ Planning_Region             <chr> \"Central Region\", \"East Region\", \"North Re…\n$ Planning_Area               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishun\"…\n$ Quarter                     <chr> \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2…\n$ Month                       <ord> Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Ja…\n$ Area_Category_SQM           <fct> <100, <100, <100, <100, <100, 300-400, >40…\n```\n\n\n:::\n:::\n\n:::\n\n# 3. Data Visualization Critique\n\n## 3.1 Original\n\nFor Data Visualisation makeover, below [submission](https://iss608-1.netlify.app/take-home_ex/take-home_ex01/take-home%20exercise%201) by a fellow student will be used.\n\n![](original.png)\n\n::: callout-tip\n## Insights\n\nIn the resale housing market, the quarterly average unit price per square meter (PSM) exhibits contrasting trends: smaller properties (\\<200 SQM) are gaining value, while larger ones (≥300 SQM) show price declines, indicating a shift in consumer preferences toward more compact living spaces. The Q1 2024 box plots reveal a broad price range within each area category, especially in the largest homes, suggesting that factors like location and amenities significantly influence pricing.\n:::\n\n## 3.2 Critique : Clarity and Aesthetics\n\n[Clarity]{.underline}\n\n1.  Boxplot for Jan, Feb and Mar are not on same Y axis scale which may be hard to compare the ranges.\n\n2.  Boxplot for 3 months in 2024Q1 are labelled as 2024-01-01, 2024-02-01, 2024-03-01 which does not represent the whole month.\n\n3.  Line charts are labelled \\<100, 100-200, 200-300, 300-400, \\>400 but at first glance it is not clear what these values means. The clarity could be improved by adding a legend or updating labels, for example, from \\<100 to \\<100 SQM.\n\n[Aesthetics]{.underline}\n\n1.  X axis, Y axis and chart labels (such as 200-300,2024-01-01) are on smaller font size and may be hard to read.\n\n2.  Boxplot colors help to distinguish each area category clearly. However, using too many colors on boxplot may be distracting to readers. Suggest using a color palette which does not produce too man contrasting colors.\n\n3.  5 line charts for Quarterly Average Unit Price (\\$PSM) by Area Category for Resale can be plotted on same Y axis as one chart. This would give a more compact and clean look.\n\n# 4. DataVis Makeover\n\n## 4.1 Makeover Sketch\n\n## 4.2 Makeover Visualisation\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresale_data <- realis_merge %>%\n  filter(`Type_of_Sale` == \"Resale\") \n\navg_price_by_quarter_resale <- resale_data %>%\n  group_by(Area_Category_SQM, Quarter) %>%\n  summarise(Avg_Unit_Price_PSM = mean(`Unit_Price_($_PSM)`, na.rm = TRUE), .groups = \"drop\")\n\np_line_resale <- avg_price_by_quarter_resale %>%\n  ggplot(aes(x = Quarter, y = Avg_Unit_Price_PSM, group = Area_Category_SQM, color = Area_Category_SQM)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Quarterly Average Unit Price ($ PSM) by Area Category for Resale\",\n       x = \"Quarter\",\n       y = \"Average Price ($ PSM)\") +\n  theme_wsj() +\n  theme(plot.title = element_text(size = rel(0.4)),  \n        axis.text.x = element_text(size = rel(0.7)),  \n        axis.text.y = element_text(size = rel(0.7)),\n        legend.text = element_text(size = rel(0.7)),\n        legend.title = element_text(size = rel(0.4)))\n\np_line_resale\n```\n:::\n\n:::\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_q1_resale <- resale_data %>%\n  filter(Quarter == \"2024Q1\") \n\np_box_resale <- ggplot(data_q1_resale, aes(x = Area_Category_SQM, y = `Unit_Price_($_PSM)`, fill = Area_Category_SQM)) +\n  geom_boxplot() +\n  geom_jitter(width = 0.2, alpha = 0.001) +  # Adjusting alpha for visibility\n  facet_wrap(~Month, scales = \"fixed\") +\n  labs(title = \"Monthly Unit Price ($ PSM) by Area Category for Resale (Q1 2024)\",\n       x = \"Area Category\",\n       y = \"Price ($ PSM)\") +\n  theme_wsj() +\n  theme(plot.title = element_text(size = rel(0.4)),  \n        axis.text.x = element_text(angle = 45, hjust = 1, size = rel(0.7)),  \n        axis.text.y = element_text(size = rel(0.7)),\n        legend.text = element_text(size = rel(0.7)),\n        legend.title = element_text(size = rel(0.4)))+\n  scale_fill_brewer(palette = \"RdPu\")\np_box_resale\n```\n:::\n\n:::\n\n# 5. Conclusion\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}