{
  "hash": "a5a86dd4e183202d89421d4c347c6b7e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2\"\nsubtitle: \"DataVis Makeover\"\nauthor: \"Thet Myat Noe\"\ndate: \"May 2, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n![](pasir-ris-8.webp) Photo: https://www.propertyguru.com.sg/\n\n# 1. Overview\n\n## 1.1 Setting the scene\n\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S\\$14,000. For families with monthly household income more than S\\$14,000, they need to turn to the private residential market.\n\n## 1.2 Task\n\nThis exercise aims to critic Data Visualization of Singapore Private Property market in terms of clarity and aesthetics. Prepare a sketch for the alternative design by using the data visualisation design principles and best practices. Finally, remake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.\n\n# 2. Getting Started\n\n## 2.1 Installing and loading the required libraries\n\n| Package                                                                     | Description                                                                                                                                                                                            |\n|--------------------------|----------------------------------------------|\n| [tidyverse](https://www.tidyverse.org/)                                     | Used data import, tidying, manipulation, and data visualization. Packages like readr, dplyr, lubridate are part of tidyverse.                                                                          |\n| [patchwork](https://patchwork.data-imaginist.com/)                          | Used to combine individual ggplot into one graphic.                                                                                                                                                    |\n| [ggthemes](https://cran.r-project.org/web/packages/ggthemes/index.html)     | Provides 'ggplot2' themes and scales that replicate the look of plots by Edward Tufte, Stephen Few, 'Fivethirtyeight', 'The Economist', 'Stata', 'Excel', and 'The Wall Street Journal', among others. |\n| [hrbrthemes](https://cran.r-project.org/web/packages/hrbrthemes/index.html) | A compilation of extra 'ggplot2' themes, scales and utilities, including a spell check function for plot label fields and an overall emphasis on typography.                                           |\n| [RColorBrewer](https://r-graph-gallery.com/38-rcolorbrewers-palettes.html)  | The RColorBrewer package offers several color palette for R.                                                                                                                                           |\n\nThe code chunk below uses `p_load()` function from **pacman** package to check if packages listed are already installed in the computer. The packages are loaded if they are found to be installed. If they are not installed, the function will proceed to install and load them into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,patchwork,ggthemes,hrbrthemes,RColorBrewer)\n```\n:::\n\n\n## 2.2 Importing Data\n\nBelow code imports 5 .csv data from REALIS into R environment by utilizing `read_csv()` function of **readr** package. readr is part of **tidyverse** packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\") #2023 Q1\nrealis2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\") #2023 Q2\nrealis3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\") #2023 Q3\nrealis4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\") #2023 Q4\nrealis5 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\") #2024 Q1\n```\n:::\n\n\n## 2.3 Data Pre-processing\n\n### 2.3.1 Combining all quarter data into one file\n\nAll residential property market data from REALIS by different quarters are merged into one file using `rbind()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge <- rbind(realis1, realis2, realis3, realis4, realis5)\n```\n:::\n\n\n### 2.3.2 Checking for duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge[duplicated(realis_merge),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 21\n# ℹ 21 variables: Project Name <chr>, Transacted Price ($) <dbl>,\n#   Area (SQFT) <dbl>, Unit Price ($ PSF) <dbl>, Sale Date <chr>,\n#   Address <chr>, Type of Sale <chr>, Type of Area <chr>, Area (SQM) <dbl>,\n#   Unit Price ($ PSM) <dbl>, Nett Price($) <chr>, Property Type <chr>,\n#   Number of Units <dbl>, Tenure <chr>, Completion Date <chr>,\n#   Purchaser Address Indicator <chr>, Postal Code <chr>,\n#   Postal District <chr>, Postal Sector <chr>, Planning Region <chr>, …\n```\n\n\n:::\n:::\n\n\nNo duplicated rows are present in the data based on duplicate check above using `duplicated()` function.\n\n#### 2.3.3 Checking for missing values (NA)\n\nUse `summary()` to get quick overview of data and missing values. We can see only Area (SQM) column has 6 missing values (NA). This will be further taken care in later processing of this exercise.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Project Name       Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)\n Length:26806       Min.   :   440000    Min.   :   322.9   Min.   : 138      \n Class :character   1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384      \n Mode  :character   Median :  1660000    Median :   990.3   Median :1762      \n                    Mean   :  2143286    Mean   :  1191.6   Mean   :1852      \n                    3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260      \n                    Max.   :392180000    Max.   :144883.4   Max.   :5756      \n                                                                              \n  Sale Date           Address          Type of Sale       Type of Area      \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Area (SQM)      Unit Price ($ PSM) Nett Price($)      Property Type     \n Min.   :   30.0   Min.   : 1484      Length:26806       Length:26806      \n 1st Qu.:   67.0   1st Qu.:14893      Class :character   Class :character  \n Median :   92.0   Median :18966      Mode  :character   Mode  :character  \n Mean   :  110.5   Mean   :19930                                           \n 3rd Qu.:  121.0   3rd Qu.:24327                                           \n Max.   :13460.0   Max.   :61962                                           \n NA's   :6                                                                 \n Number of Units     Tenure          Completion Date   \n Min.   : 1.000   Length:26806       Length:26806      \n 1st Qu.: 1.000   Class :character   Class :character  \n Median : 1.000   Mode  :character   Mode  :character  \n Mean   : 1.005                                        \n 3rd Qu.: 1.000                                        \n Max.   :60.000                                        \n                                                       \n Purchaser Address Indicator Postal Code        Postal District   \n Length:26806                Length:26806       Length:26806      \n Class :character            Class :character   Class :character  \n Mode  :character            Mode  :character   Mode  :character  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n Postal Sector      Planning Region    Planning Area     \n Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n```\n\n\n:::\n:::\n\n\n### 2.3.4 Create Quarter and Month Column\n\nUse `as.Date()` function to put Sale_Date column into date object, specify format to ensure `as.Date()` recognize the content accurately as date. Use `year()`, `quarter()` and `month()` functions from **lubridate** package to extract year, quarter & month and use `paste()` to concatenate the strings.\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge$\"Sale Date\" <- as.Date(realis_merge$\"Sale Date\", format = \"%d %b %Y\")\nrealis_merge$Quarter <- paste(year(realis_merge$\"Sale Date\"), \"Q\", quarter(realis_merge$\"Sale Date\"), sep=\"\")\nrealis_merge$Month <- month(realis_merge$\"Sale Date\", label = TRUE)\n```\n:::\n\n\n## Data Glimpse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 23\n$ `Project Name`                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        <dbl> 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   <date> 2023-01-01, 2023-01-02, 2023-01-02, 202…\n$ Address                       <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          <dbl> 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               <chr> \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             <chr> \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n$ Quarter                       <chr> \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2023Q1\", …\n$ Month                         <ord> Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, …\n```\n\n\n:::\n:::\n\n:::\n\n### 2.3.4 Create Area Category Column\n\nUse `mutate()`, `ifelse()` and `is.na()` to replace NA (missing values) with 0. Next, use `mutate()` and `cut()` functions to create area Category column (\"\\<100\", \"100-200\", \"200-300\", \"300-400\", \"\\>400\").\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_merge <- realis_merge %>%\n  mutate(\n    `Area (SQM)` = ifelse(is.na(`Area (SQM)`), 0, `Area (SQM)`)  # Dealing with NA values\n  )\nrealis_merge <- realis_merge %>%\n  mutate(\n    `Area Category (SQM)` = cut(\n      `Area (SQM)`,\n      breaks = c(0, 100, 200, 300, 400, Inf),  \n      labels = c(\"<100\", \"100-200\", \"200-300\", \"300-400\", \">400\"),\n      include.lowest = TRUE  \n    )\n  )\n```\n:::\n\n\n## Data Glimpse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 24\n$ `Project Name`                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        <dbl> 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   <date> 2023-01-01, 2023-01-02, 2023-01-02, 202…\n$ Address                       <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          <dbl> 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               <chr> \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             <chr> \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n$ Quarter                       <chr> \"2023Q1\", \"2023Q1\", \"2023Q1\", \"2023Q1\", …\n$ Month                         <ord> Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, …\n$ `Area Category (SQM)`         <fct> <100, <100, <100, <100, <100, 300-400, >…\n```\n\n\n:::\n:::\n\n:::\n\n# 3. Data Visualization Critique\n\n## 3.1 Original\n\nFor Data Visualisation makeover, below [submission](https://iss608-1.netlify.app/take-home_ex/take-home_ex01/take-home%20exercise%201) by a fellow student will be used.\n\n![](original.png)\n\n::: callout-tip\n## Insights (Extracted from Original Visualisation Submission)\n\nIn the resale housing market, the quarterly average unit price per square meter (PSM) exhibits contrasting trends: smaller properties (\\<200 SQM) are gaining value, while larger ones (≥300 SQM) show price declines, indicating a shift in consumer preferences toward more compact living spaces. The Q1 2024 box plots reveal a broad price range within each area category, especially in the largest homes, suggesting that factors like location and amenities significantly influence pricing.\n:::\n\n## 3.2 Critique : Clarity and Aesthetics\n\n[Clarity]{.underline}\n\n1.  Boxplot for Jan, Feb and Mar are not on same Y axis scale which may be hard to compare the ranges.\n\n2.  Boxplot for 3 months in 2024Q1 are labelled as 2024-01-01, 2024-02-01, 2024-03-01 which does not represent the whole month.\n\n3.  Line graphs are labelled \\<100, 100-200, 200-300, 300-400, \\>400 but at first glance it is not clear what these values means. The clarity could be improved by adding a legend or updating labels, for example, from \\<100 to \\<100 SQM.\n\n4.  For line graph, it is not immediately clear at first glance how many quarters the line passes through without looking at x-axis since there is no indicator on the line at each quarter.\n\n5.  Chart titles do not indicate which country does the charts represent. It may be good to indicate \"Singapore Private Property Market\" for clarity.\n\n[Aesthetics]{.underline}\n\n1.  X axis, Y axis and chart labels (such as 200-300,2024-01-01) are on smaller font size and may be hard to read.\n\n2.  Boxplot colors help to distinguish each area category clearly. However, using too many bright colors especially on boxplot may be distracting to readers. Suggest using a color palette which does not produce too many vivid contrasting colors.\n\n3.  5 line charts for Quarterly Average Unit Price (\\$PSM) by Area Category for Resale can be plotted on same Y axis as one chart. This would give a more compact and clean look.\n\n# 4. DataVis Makeover\n\n## 4.1 Makeover Sketch\n\n![](sketch1.jpg)\n\n![](sketch2.jpg)\n\n## 4.2 Makeover Visualisation\n\nFor [Quarterly Average Unit Price (\\$ PSM) by Area Category for Resale]{.underline} plot, Singapore Privare Property Reslae data is need to be prepared first. To get **Resale data** only, use `filter()` function from **dplyr** to filter from realis_merge data. Use `ggplot()`, `geom_bar()` and `geom_point()` from **ggplot2** ![](logo.png){width=\"46\"} to plot the chart. More functions from ggplot2 are used: `labs()` functions from ggplot2 are used to set chart title. Use `theme()` to set text size of chart title, axis text, legend text and legend title. Use `theme_wsj()` from **ggthemes** to set Wall Street Journal theme.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresale_data <- realis_merge %>%\n  filter(`Type of Sale` == \"Resale\") \n\navg_price_by_quarter_resale <- resale_data %>%\n  group_by(`Area Category (SQM)`, Quarter) %>%\n  summarise(Avg_Unit_Price_PSM = mean(`Unit Price ($ PSM)`, na.rm = TRUE), .groups = \"drop\")\n\np_line_resale <- avg_price_by_quarter_resale %>%\n  ggplot(aes(x = Quarter, y = Avg_Unit_Price_PSM, group = `Area Category (SQM)`, color = `Area Category (SQM)`)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Quarterly Average Unit Price ($ PSM) by Area Category for Resale\",\n       subtitle = \"Singapore Private Property Market\",\n       x = \"Quarter\",\n       y = \"Average Price ($ PSM)\") +\n  theme_wsj() +\n  theme(plot.title = element_text(size = rel(0.4)),\n        plot.subtitle = element_text(size = rel(0.35)),\n        axis.text.x = element_text(size = rel(0.7)),  \n        axis.text.y = element_text(size = rel(0.7)),\n        axis.title.x = element_text(size = rel(0.4)),\n        axis.title.y = element_text(size = rel(0.4)),\n        legend.text = element_text(size = rel(0.7)),\n        legend.title = element_text(size = rel(0.4)))\n\np_line_resale\n```\n:::\n\n\n## Improvements Made\n\n-   Combined 5 line graphs into one for compactness and clean look\n\n-   Added legend for Area Category (SQM) for clarity\n\n-   Added \"dot\" indicator at points where line passes each quarter\n\n-   Added \"Singapore Private Property Market\" subtitle for clarity Bigger X axis, Y axis and chart labels\n:::\n\nNext, [Monthly Unit Price (\\$ PSM) by Area Category for Resale (Q1 2024)]{.underline} plot will be remake and we need to prepare Resale data for first quarter of 2024. To get **2024 Quarter 1** data only, use `filter()` function from **dplyr** to filter from resale_data. Use `ggplot()`, `geom_boxplot()` and `geom_jitter()` from ggplot2 to plot the chart. `facet_wrap()` is used to chart 3 months data side by side: Jan and Feb followed by Mar. More functions from ggplot2 are used: `labs()` functions from ggplot2 are used to set chart title. Use `theme()` to set text size of chart title, axis text, legend text and legend title. Use `theme_wsj()` from **ggthemes** to set Wall Street Journal theme. `scale_fill_brewer()` is used to color the boxplots.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_q1_resale <- resale_data %>%\n  filter(Quarter == \"2024Q1\") \n\np_box_resale <- ggplot(data_q1_resale, aes(x = `Area Category (SQM)`, y = `Unit Price ($ PSM)`, fill = `Area Category (SQM)`)) +\n  geom_boxplot() +\n  geom_jitter(width = 0.2, alpha = 0.001) +  # Adjusting alpha for visibility\n  facet_wrap(~Month, scales = \"fixed\") +\n  labs(title = \"Monthly Unit Price ($ PSM) by Area Category for Resale (Q1 2024)\",\n       subtitle = \"Singapore Private Property Market\",\n       x = \"Area Category\",\n       y = \"Price ($ PSM)\") +\n  theme_wsj() +\n  theme(plot.title = element_text(size = rel(0.4)),\n        plot.subtitle = element_text(size = rel(0.35)),\n        axis.text.x = element_text(angle = 45, hjust = 1, size = rel(0.7)),  \n        axis.text.y = element_text(size = rel(0.7)),\n        axis.title.x = element_text(size = rel(0.4)),\n        axis.title.y = element_text(size = rel(0.4)),\n        legend.text = element_text(size = rel(0.7)),\n        legend.title = element_text(size = rel(0.4)))+\n  scale_fill_brewer(palette = \"Greys\")\np_box_resale\n```\n:::\n\n\n## Improvements Made\n\n-   Made Boxplot for Jan, Feb and Mar are not on same Y axis scale for better comparing the ranges.\n\n-   Boxplot for 3 months in 2024Q1 are labelled as 2024-01-01, 2024-02-01, 2024-03-01 which does not represent the whole month. Used \"Jan\", \"Feb\", \"Mar\" instead.\n\n-   Added \"Singapore Private Property Market\" subtitle for clarity.\n\n-   Bigger X axis, Y axis and chart labels.\n\n-   Boxplot colors help to distinguish each area category clearly. However, using too many bright colors on boxplot may be distracting to readers. Used grey color palette with varying tones which does not produce too many vivid distracting colors.\n:::\n\n# 5. Conclusion\n\nIn Summary, Data visualisation makeover is done via ggplot2, ggplot2 extensions and tidyverse packages. Design improvements were done to elevate the clarity and aesthetics of the original submission.\n\n# 6. References\n\n[Faceting](https://ggplot2-book.org/facet.html)\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}